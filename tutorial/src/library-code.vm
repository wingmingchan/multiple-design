## this format contains reusable library code

#set( $chanwEmptyString = "" )

## get service objects
#set( $chanwServiceProvider = $_.Class.forName( "com.hannonhill.cascade.model.service.ServiceProviderHolderBean"
    ).getMethod( "getServiceProvider" ).invoke( null ) )
#set( $chanwBlockService = $chanwServiceProvider.getBlockService() )
#set( $chanwDDService    = $chanwServiceProvider.getStructuredDataDefinitionService() )
#set( $chanwPageService  = $chanwServiceProvider.getPageService() )

## get StringReader
#set( $chanwStringReaderConstructor = $_.Class.forName( 'java.io.StringReader' ).getConstructor( $chanwEmptyString.Class ) )
## get SAXBuilder
#set( $chanwSAXBuilder = $_.Class.forName( "org.jdom.input.SAXBuilder" ).getConstructor().newInstance() )

## build an org.jdom.Element object
#macro( chanwBuildXMLContentRoot $xmlString )
    ## create the string reader object
    #set( $chanwStringReader = $chanwStringReaderConstructor.newInstance( $xmlString ) )
    #set( $chanwBuildXMLContentRoot = $chanwEmptyString )
    ## read the XML string, pass it into the sax builder, create XML tree, and return the object
    #set( $chanwBuildXMLContentRoot = $chanwSAXBuilder.build( $chanwStringReader ).RootElement )
#end

## retrieve the attribute map
#macro( chanwGetDataDefinitionAttributeMap $element )
    #set( $chanwGetDataDefinitionAttributeMap = {} )
    #chanwGetDataDefinitionAttributeMapHelper( $element )
#end
## the helper macro, populating the attribute map
#macro( chanwGetDataDefinitionAttributeMapHelper $element )
    #chanwGetFQIPathForJDOMElement( $element )
    #set( $chanwCurrentFQI = $chanwEmptyString )
    #set( $chanwCurrentFQI = $chanwGetFQIPathForJDOMElement )
    
    #if( $chanwCurrentFQI != $chanwEmptyString )
        #set( $chanwGetDataDefinitionAttributeMap[ $chanwCurrentFQI ] = {} )
    #end
    
    #if( $element.getAttributes().Class.Name )
        #foreach( $attr in $element.getAttributes() )
            #set( $chanwGetDataDefinitionAttributeMap[ $chanwCurrentFQI ][ $attr.Name ] = $attr.Value )
##
            #if( $attr.Name == "type" && ( $attr.Value == "checkbox" || $attr.Value == "dropdown" || $attr.Value == "radiobutton" || $attr.Value == "multi-selector" ) )
                #set( $chanwGetDataDefinitionAttributeMap[ $chanwCurrentFQI ][ "item" ] = [] )
                #foreach( $child in $element.Children )
                    #set( $void = $chanwGetDataDefinitionAttributeMap[ $chanwCurrentFQI ][ "item" ].add( $child.getAttribute( "value" ).Value ) )
                #end
            #end
        #end
    #end
    
    #if( $element.isRootElement() || $element.Name == "group" )
        #foreach( $child in $element.Children )
            #chanwGetDataDefinitionAttributeMapHelper( $child )
        #end
    #end
#end

## get the FQI of an element
#macro( chanwGetFQIPathForJDOMElement $element )
    #set( $chanwGetFQIPathForJDOMElement = $chanwEmptyString )
    #if( $element.isRootElement() )
        #break
    ## recursion
    #elseif( $element.getParentElement().Class.Name )
        #chanwGetFQIPathForJDOMElement( $element.getParentElement() )
        #if( $chanwGetFQIPathForJDOMElement == $chanwEmptyString )
            #set( $chanwGetFQIPathForJDOMElement = $element.getAttribute( "identifier" ).Value )
        #else
            #set( $chanwGetFQIPathForJDOMElement = $chanwGetFQIPathForJDOMElement + ";" + $element.getAttribute( "identifier" ).Value )
        #end
    #end
#end

## retrieve DD from the API object
#macro( chanwRetrieveDataDefinition $apiObject )
    #if( $apiObject.Class.Name && $apiObject.Class.Name == "com.hannonhill.cascade.api.adapters.XHTMLDataDefinitionBlockAPIAdapter" )
        #set( $chanwRetrieveDataDefinition = $chanwDDService.get( $chanwBlockService.get( $apiObject.Identifier.Id ).StructuredDataDefinition.Id ) )
    #elseif( $apiObject.Class.Name && $apiObject.Class.Name == "com.hannonhill.cascade.api.adapters.PageAPIAdapter" )
        #set( $chanwRetrieveDataDefinition = $chanwDDService.get( $chanwPageService.get( $apiObject.Identifier.Id ).StructuredDataDefinition.Id ) )
    #else
        ## do whatever necessary here
        #set( $chanwRetrieveDataDefinition = $chanwEmptyString )
    #end
#end