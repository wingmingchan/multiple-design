#*doc
《documentationautoflow》
《step id=“defaultHtmlTreeEntryPoint”》
    《title》Default tree entry point《/title》
    《autostep》《/autostep》
《/step》
《step id=“defaultHtmlTreeInitialize”》
    《title》
        Create the root node and invokes #initialize
    《/title》
    《content》
        Declare the root of the tree and a macro to be called before the tree is processed. Invokes 《code》#initialize《/code》 《goto》pageElementMacrosInitialize《/goto》
    《/content》
    《stepcode》
doc*###
##
#chanwCreateNode( {
    $TREE_NODE_NAME :      "html",
    $TREE_NODE_START_TAG : "<html $!siteConfigMap['htmlAttributes']>",
    $TREE_NODE_END_TAG :   "</html>",
    $TREE_NODE_CODE :      '#initialize'} )
##
#*doc
    《/stepcode》
《/step》
doc*###
##
#chanwAddChildren( $chanwObjectNodeMap[ "html" ] [ 
    { $TREE_NODE_NAME : "head", $TREE_NODE_START_TAG : "<head $!siteConfigMap['headAttributes']>",  $TREE_NODE_END_TAG : "</head>" },
    { $TREE_NODE_NAME : "body", $TREE_NODE_START_TAG : "<body $!siteConfigMap['bodyAttributes']>",  $TREE_NODE_END_TAG : "</body>" }
] )
#*doc
《step id=“defaultHtmlTreeMetaTitleLink”》
    《title》
        Add code for processing the meta, title, and link element to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
##
#chanwAddChildren( $chanwObjectNodeMap[ "head" ] [
    { $TREE_NODE_NAME : "meta", $TREE_NODE_CODE :  '#outputPageElement(''meta'')' }, 
    { $TREE_NODE_NAME : "title", $TREE_NODE_CODE : '#outputPageElement(''title'')#outputPageElement(''googleTagManager'')' }, 
    { $TREE_NODE_NAME : "link", $TREE_NODE_CODE :  '#outputPageElement(''link'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreeHeader”》
    《title》
        Add code for processing the header to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
##
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [
    { $TREE_NODE_NAME : "header", $TREE_NODE_CODE : '#outputPageElement(''googleTagManagerNoscript'')#outputPageElement(''header'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreeSiteNav”》
    《title》
        Add code for processing the site nav to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [
    { $TREE_NODE_NAME : "siteNav",     $TREE_NODE_CODE : '#outputPageElement(''siteNavForPageRender'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreeBreadcrumbs”》
    《title》
        Add code for processing the breadcrumbs to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [
    { $TREE_NODE_NAME : "breadcrumbs", $TREE_NODE_CODE : '#outputPageElement(''breadcrumbs'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreePreMain”》
    《title》
        Add code for processing the preMain to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [    
    { $TREE_NODE_NAME : "preMain",     $TREE_NODE_CODE : '#outputPageElement(''preMain'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreePostMain”》
    《title》
        Add code for processing the postMain to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [
    { $TREE_NODE_NAME : "postMain",    $TREE_NODE_CODE : '#outputPageElement(''postMain'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreeFooter”》
    《title》
        Add code for processing the footer to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [
    { $TREE_NODE_NAME : "footer",      $TREE_NODE_CODE : '#outputPageElement(''footer'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreeScript”》
    《title》
        Add code for processing the script to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [
    { $TREE_NODE_NAME : "script",      $TREE_NODE_CODE : '#outputPageElement(''script'')' }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreeCDTop”》
    《title》
        Add code for processing the cd-top to the tree
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#chanwAddChildren( $chanwObjectNodeMap[ "body" ] [
    { $TREE_NODE_NAME : "cd-top",      $TREE_NODE_TEXT : "<a class=""cd-top"" href=""#0"">Top</a>" }
] )
##
#*doc
    《/stepcode》
《/step》
《step id=“defaultHtmlTreeMain”》
    《title》
        Add code for inserting the main subtree to the tree 《goto》leftCenterMainTreeEntryPoint《/goto》
    《/title》
    《content》
    《/content》
    《stepcode》
doc*###
#import( "site://_brisk/app/scaffolds/default-main-tree" )
#set( $postMainIndex = $chanwObjectNodeMap[ "body" ].getIndex( $chanwObjectNodeMap[ "postMain" ] ) )
#set( $void = $chanwObjectNodeMap[ "body" ].insert( $chanwObjectNodeMap[ "main" ], $postMainIndex ) ) ## always before postMain


## middleElement is defined in main
#import( "site://_brisk/app/scaffolds/innermain-tree" )
#set( $void = $chanwObjectNodeMap[ "middleElement" ].add( $chanwObjectNodeMap[ "innermain" ] ) )

#*doc
    《/stepcode》
《/step》
《/documentationautoflow》
doc*###