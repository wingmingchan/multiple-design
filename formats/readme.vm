#*
《code》
《copyright》
Authors: Wing Ming Chan
Copyright (c) 2017 Wing Ming Chan <chanw@upstate.edu>
MIT Licensed
Modification history:
5/8/2017 Changed name of global_variables to chanw_setup_global_variables.
《/copyright》
《documentation id=“top”》
《h2》Introduction《/h2》
《p》This format does not include any Velocity code. Instead, it highlights
important issues related to the multiple-design master site and various parts.《/p》
《h2》The 《code》master_setup《/code》 Format《/h2》
《ul》
《li》Associates sites with designs《/li》
《li》If a site is associated with the default design, its name does not have to
be added to the default list《/li》
《/ul》
《h2》The 《code》chanw_setup_global_variables《/code》 Format《/h2》
《p》This format resides in the library of the core site.《/p》
《ul》
《li》Defines variables associated with locations of global components and default rendering behaviors《/li》
《li》Global components should be extremely generic and should not be tied with a specific design《/li》
《li》Global components thus defined should be applicable to all organizations and all designs《/li》
《li》To fine-tune global components of a specific design, define those smaller parts in the design《/li》
《/ul》
《h2》The 《code》default《/code》 Format《/h2》
《ul》
《li》There is no 《code》<!DOCTYPE html>《/code》《/li》
《li》This is because code like 《code》<!--#protect-top《/code》 fails《/li》
《li》Instead, it is generated by server-side PHP code, invoked by the template-level format
named 《code》rwd_template《/code》 like this:
《pre》
<xsl:processing-instruction name="php">require_once('cascade/cascade_global.php');$responsive = true;echo $doctype;</xsl:processing-instruction>
《/pre》
《/li》
《li》When writing 《code》#import《/code》 statements to import global components,
follow the sequence of the components appearing in the XHTML markups《/li》
《li》Never hard code a design name here; used 《code》$design_namespace《/code》 instead《/li》
《li》When processing the page data definition and whenever a 《code》content《/code》 element
is encountered, invoke 《code》#chanwProcessBlockChooser《/code》 and pass in the
《code》content《/code》 element《/li》
《li》As long as the block attached to a block chooser is set up properly (named
properly, or embedded with type information or with a macro name), automatic macro
invocation will kick in《/li》
《/ul》
《h2》The 《code》layout《/code》 Format《/h2》
《ul》
《li》Defines XHTML structure for pages《/li》
《li》Use various layout-related parameters to calculate the desired layout《/li》
《li》Calculate CSS class names based on global variables defined in setup formats
and insert them into 《code》div《/code》 elements《/li》
《/ul》
《h2》The 《code》custom_macro_list《/code》 Format《/h2》
《ul》
《li》The list named 《code》$single_group_names《/code》 only contains
values assigned to the 《code》default《/code》 attribute of a field whose
identifier is 《code》block-type《/code》 of a single-functional
data definition《/li》
《li》The list named 《code》$multi_macro_names《/code》 only contains names of
macros invoked to process multi-functional data definition blocks《/li》
《/ul》
《/documentation》
《documentation id=“bottom”》
《/documentation》
《/code》
*#